iRel <- str_locate_all(auxFile, "Rel.: ")
library("stringr")
setwd("/home/laura/workspace/Lore/Experiments/Exp3/")
# setwd("C://Users//usuario//Desktop//eclipse//workspace//Lore0818//outputs//Exp2//")
source("/home/laura/workspace/Lore/R/0.1reading.R")
# source("C://Users//usuario//Desktop//eclipse//workspace//Lore0818//R//0.1reading.R")
info <- c("Instance", "Seed", "pDemand", "pTime",
"BSS-opt c", "BSS-exp opt c",
"BSS-relD", "BSS-relT", "BSS-rel", "BSS-checkList",
"BSS-SSC1", "BSS-SSC2", "BSS-SSB")
info[c(1,4,5,6,15,22,30,36,43,51,31,52)]
info[c(1,2,4,5,6,15,22,30,36,43,51,31,52)]
colnames(mat)[c(1,2,4,5,6,15,22,30,36,43,51,31,52)]
colnames(mat)[c(1,4,7,15,22,30,36,43,51,31,52)]
colnames(mat)[c(1,4,5:14,15,22,30,36,43,51,31,52)]
colnames(mat)[c(1,4,10:14,15,22,30,36,43,51,31,52)]
colnames(mat)[c(1,4,12:14,15,22,30,36,43,51,31,52)]
colnames(mat)[c(1,4,12,13,22,30,36,43,51,31,52)]
colnames(mat)[c(1,4,12,13,36,43,51,31,52)]
colnames(mat)[c(1,4,12,13,35,42,51,31,52)]
colnames(mat)[c(1,4,12,13,35,42,49,50,51,52)]
mat1 <- mat[,c(1,4,12,13,35,42,49,50,51,52)]
dim(mat1)
info <- c("Instance", "Seed", "pDemand", "pTime",
"BSS-opt c", "BSS-exp opt c",
"BSS-relD", "BSS-relT", "BSS-rel", "BSS-checkList",
"BSS-SSC1", "BSS-SSC2", "BSS-SSB")
mat1 <- mat[,c(1,4,12,13,35,42,49,50,51,52)]
for(j in seq(3,9)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,10]=="false")
mat1 <- mat1[,-c(10)]
mat1
labels(mat1$Instance)
mat1$Instance
levels(mat1$Instance)
instanceLevels <- levels(mat1$Instance)
pDLevels <- levels(mat1$pDemand)
pTLevels <- levels(mat1$pTime)
for(i in instanceLevels){
for(j in pDLevels){
for(k in pTLevels){
aux <- subset(aux, mat1[,1] == instanceLevels[i] && mat1[,3] == instanceLevels[j] && mat1[,4] == instanceLevels[k])
}
}
}
aux
instanceLevels <- levels(mat1$Instance)
pDLevels <- levels(mat1$pDemand)
pTLevels <- levels(mat1$pTime)
for(i in instanceLevels){
for(j in pDLevels){
for(k in pTLevels){
aux <- subset(mat1, mat1[,1] == instanceLevels[i] && mat1[,3] == instanceLevels[j] && mat1[,4] == instanceLevels[k])
}
}
}
aux
instanceLevels <- levels(mat1$Instance)
pDLevels <- levels(mat1$pDemand)
pTLevels <- levels(mat1$pTime)
for(i in instanceLevels){
for(j in pDLevels){
for(k in pTLevels){
aux <- subset(mat1, mat1[,1] == instanceLevels[i] && mat1[,3] == pDLevels[j] && mat1[,4] == pTLevels[k])
}
}
}
aux
i<-1
j<-1
k<-1
subset(mat1, mat1[,1] == instanceLevels[i] && mat1[,3] == pDLevels[j] && mat1[,4] == pTLevels[k])
pDLevels
labels(mat1$pDemand)
mat1$pDemand
mat1 <- mat[,c(1,4,12,13,42,49,50,51,52)]
for(j in seq(5,9)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,10]=="false")
mat1 <- mat1[,-c(10)]
# for each instance, pDemand, pTime .. min BSS-exp
instanceLevels <- levels(mat1$Instance)
mat1 <- mat[,c(1,4,12,13,42,49,50,51,52)]
info <- c("Instance", "Seed", "pDemand", "pTime",
"BSS-exp opt c",
"BSS-relD", "BSS-relT", "BSS-rel", "BSS-checkList",
"BSS-SSC1", "BSS-SSC2", "BSS-SSB")
mat1 <- mat[,c(1,4,12,13,42,49,50,51,52)]
for(j in seq(5,8)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,9]=="false")
mat1 <- mat1[,-c(9)]
labels(mat1$pDemand)
levels(mat1$pDemand)
instanceLevels <- levels(mat1$Instance)
pDLevels <- levels(mat1$pDemand)
pTLevels <- levels(mat1$pTime)
for(i in instanceLevels){
for(j in pDLevels){
for(k in pTLevels){
aux <- subset(mat1, mat1[,1] == instanceLevels[i] && mat1[,3] == pDLevels[j] && mat1[,4] == pTLevels[k])
}
}
}
aux
subset(mat1, mat1[,1] == instanceLevels[i] && mat1[,3] == pDLevels[j] && mat1[,4] == pTLevels[k])
subset(mat1, mat1[,1] == instanceLevels[1] && mat1[,3] == pDLevels[1] && mat1[,4] == pTLevels[1])
subset(mat1, mat1[,1] == instanceLevels[1] & mat1[,3] == pDLevels[1] & mat1[,4] == pTLevels[1])
mat1 <-cbind(mat1, id = 1:dim(mat1)[1])
results <- NULL
indexs <- NULL
dim(mat1)
head(mat1)
