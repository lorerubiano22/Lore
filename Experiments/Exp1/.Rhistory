library(shiny)
install.packages(shiny)
install.packages("shiny")
getwd()
library(shiny); source('main.R')
source('main.R')
runApp('algebra_App1')
source('main.R')
source('main.R')
runApp('algebra_App1')
source('main.R')
runExample("03_reactivity")
runApp('algebra_App1')
runApp('algebra_App1')
runApp('algebra_App1')
runApp('algebra_App1')
runApp('algebra_App1')
source('main.R')
runApp('algebra_App1')
runExample("01_hello")
runApp('algebra_App1')
runApp('provaHTML')
runApp('provaHTML')
shinyApp(
ui <- htmlOutput("example"),
server <- function(input, output, session){
# vector (in the real app, this is not a static vector--it will be updated with other inputs)
states <- c("Alabama", "Alaska", "Arizona", "Arkansas")
# text output
output$example <- renderUI({
x <- paste0("<strong>Here are your states</strong>: ", paste(states, collapse = " "))
HTML(x)
}) #END RENDERUI
} #END SERVER
)
runApp('algebra_App1')
runApp('algebra_App1')
runApp('algebra_App1')
runApp('algebra_App1')
class(c("222"))
A = round(matrix(a,ncol=2, nrow=2),0)
a <- runif(4,-10:10)
b <- runif(2,-10:10)
A = round(matrix(a,ncol=2, nrow=2),0)
B = round(matrix(b,ncol=2, nrow=1),0)
A
B
A%*%B
B = round(matrix(b,ncol=2, nrow=2),0)
A%*%B
A*B
drop(z)
drop(A%*%B)
A
B
B = round(matrix(b,ncol=1, nrow=2),0)
A
B
A%*%B
as.character(A%*%B)
unlist(as.character(A%*%B))
as.vector(A%*%B)
D <-A%*%B
D <- as.vector(D)
d <- paste(D[1],D[2],sep=",")
d
d.equals("57,87")
d.equal("57,87")
equal(d,"57,87")
equals(d,"57,87")
d=="57,87"
d==c("57,87")
if(d==c("57,87")) then cat("Hola")
if(d==c("57,87")) then print("Hola")
if(d==c("57,87")){print("Hola")}
runApp('algebra_App1')
runApp('algebra_App1')
runApp()
runApp('algebra_App1')
runApp('algebra_App1')
getwd()
runUrl("https://drive.google.com/open?id=1-8wa42RoVGlK3jmRa7-y9RV_AmLf-Scf")
?runApp
runUrl('https://drive.google.com/open?id=1-8wa42RoVGlK3jmRa7-y9RV_AmLf-Scf.zip')
runApp('/home/laura/algebra_App1.zip')
?runApp
runApp('/home/laura/algebra_App1')
runApp('/home/laura/algebra_App1')
library(shiny)
runApp('/home/laura/algebra_App1')
runApp('/home/laura/algebra_App1')
runApp('algebra_App1')
runApp('algebra_App1')
runApp('algebra_App1')
library(crayon)
red("hola")
cat(red("hola"))
runApp('algebra_App1')
runApp('algebra_App1')
?sample
a<-1
?sample()
library("stringr")
setwd("/home/laura/workspace/Lore/Experiments/Exp1/")
info <- c("Instance name", "Opt dist", "Det", "Seed", "VarD", "VarT",
"W economic", "W environment", "W social",
"preventive", "corrective", "pDemand", "pTime",
"BDS-opt c", "BDS-total c", "BDS-dist", "BDS-time",
"BDS-economic c", "BDS-co2 c", "BDS-social c",
"BDS-exp opt c", "BDS-exp total c", "BDS-exp dist", "BDS-exp time",
"BDS-exp economic c", "BDS-exp co2 c", "BDS-exp social c",
"BDS-relD", "BDS-relT", "BDS-rel",
"BSS-opt c", "BSS-total c", "BSS-dist", "BSS-time",
"BSS-economic c", "BSS-co2 c", "BSS-social c",
"BSS-exp opt c", "BSS-exp total c", "BSS-exp dist", "BSS-exp time",
"BSS-exp economic c", "BSS-exp co2 c", "BSS-exp social c",
"BSS-relD", "BSS-relT", "BSS-rel")
listFiles <- list.files(".")
m <- length(listFiles)
mat <- matrix(0, nrow = m, ncol = length(info))
colnames(mat) <- info
for(i in 1:m){
auxFile <- listFiles[i]
mat[i,c(1:13)] <- strsplit(auxFile,"_")[[1]][c(1:3,8,11:19)]
auxFile <- readChar(auxFile, file.info(auxFile)$size)
iOptCosts <- str_locate_all(auxFile, "Optimization costs: ")
iTotalCosts <- str_locate_all(auxFile, "Total costs: ")
iDist <- str_locate_all(auxFile, "Dist: ")
iTime <- str_locate_all(auxFile, "Time: ")
iFuelCost <- str_locate_all(auxFile, "Fuel cost: ")
iEconomicCost <- str_locate_all(auxFile, "Economic cost: ")
iCo2Cost <- str_locate_all(auxFile, "Co2 cost: ")
iSocialCost <- str_locate_all(auxFile, "Social cost: ")
iCheckList <- str_locate_all(auxFile, "CheckList: ")
iExpOptCosts <- str_locate_all(auxFile, "Exp. optimization costs: ")
iExpTotalCosts <- str_locate_all(auxFile, "Exp. total costs: ")
iExpDist <- str_locate_all(auxFile, "Exp. distance: ")
iExpTime <- str_locate_all(auxFile, "Exp. time: ")
iExpFuelCost <- str_locate_all(auxFile, "Exp. fuel costs: ")
iExpEconomicCost <- str_locate_all(auxFile, "Exp. economic costs: ")
iExpCo2Cost <- str_locate_all(auxFile, "Exp. co2 costs: ")
iExpSocialCost <- str_locate_all(auxFile, "Exp. social costs: ")
iExpDemand <- str_locate_all(auxFile, "Exp. demand: ")
iRelD <- str_locate_all(auxFile, "Rel. demand: ")
iRelT <- str_locate_all(auxFile, "Rel. time: ")
iRel <- str_locate_all(auxFile, "Rel.: ")
iCompt <- str_locate_all(auxFile, "Sol computing time: ")
mat[i,14] <- substr(auxFile, iOptCosts[[1]][1,2], iTotalCosts[[1]][1,1]-3)
mat[i,15] <- substr(auxFile, iTotalCosts[[1]][1,2], iDist[[1]][1,1]-3)
mat[i,16] <- substr(auxFile, iDist[[1]][1,2], iTime[[1]][1,1]-3)
mat[i,17] <- substr(auxFile, iTime[[1]][1,2], iFuelCost[[1]][1,1]-3)
mat[i,18] <- substr(auxFile, iEconomicCost[[1]][1,2], iCo2Cost[[1]][1,1]-3)
mat[i,19] <- substr(auxFile, iCo2Cost[[1]][1,2], iSocialCost[[1]][1,1]-3)
mat[i,20] <- substr(auxFile, iSocialCost[[1]][1,2], iCheckList[[1]][1,1]-3)
mat[i,21] <- substr(auxFile, iExpOptCosts[[1]][1,2], iExpTotalCosts[[1]][1,1]-3)
mat[i,22] <- substr(auxFile, iExpTotalCosts[[1]][1,2], iExpDist[[1]][1,1]-3)
mat[i,23] <- substr(auxFile, iExpDist[[1]][1,2], iExpTime[[1]][1,1]-3)
mat[i,24] <- substr(auxFile, iExpTime[[1]][1,2], iExpFuelCost[[1]][1,1]-3)
mat[i,25] <- substr(auxFile, iExpEconomicCost[[1]][1,2], iExpCo2Cost[[1]][1,1]-3)
mat[i,26] <- substr(auxFile, iExpCo2Cost[[1]][1,2], iExpSocialCost[[1]][1,1]-3)
mat[i,27] <- substr(auxFile, iExpSocialCost[[1]][1,2], iExpDemand[[1]][1,1]-3)
mat[i,28] <- substr(auxFile, iRelD[[1]][1,2], iRelT[[1]][1,1]-3)
mat[i,29] <- substr(auxFile, iRelT[[1]][1,2], iRel[[1]][1,1]-3)
mat[i,30] <- substr(auxFile, iRel[[1]][1,2], iCompt[[1]][1,1]-3)
mat[i,31] <- substr(auxFile, iOptCosts[[1]][2,2], iTotalCosts[[1]][2,1]-3)
mat[i,32] <- substr(auxFile, iTotalCosts[[1]][2,2], iDist[[1]][2,1]-3)
mat[i,33] <- substr(auxFile, iDist[[1]][2,2], iTime[[1]][2,1]-3)
mat[i,34] <- substr(auxFile, iTime[[1]][2,2], iFuelCost[[1]][2,1]-3)
mat[i,35] <- substr(auxFile, iEconomicCost[[1]][2,2], iCo2Cost[[1]][2,1]-3)
mat[i,36] <- substr(auxFile, iCo2Cost[[1]][2,2], iSocialCost[[1]][2,1]-3)
mat[i,37] <- substr(auxFile, iSocialCost[[1]][2,2], iCheckList[[1]][2,1]-3)
mat[i,38] <- substr(auxFile, iExpOptCosts[[1]][2,2], iExpTotalCosts[[1]][2,1]-3)
mat[i,39] <- substr(auxFile, iExpTotalCosts[[1]][2,2], iExpDist[[1]][2,1]-3)
mat[i,40] <- substr(auxFile, iExpDist[[1]][2,2], iExpTime[[1]][2,1]-3)
mat[i,41] <- substr(auxFile, iExpTime[[1]][2,2], iExpFuelCost[[1]][2,1]-3)
mat[i,42] <- substr(auxFile, iExpEconomicCost[[1]][2,2], iExpCo2Cost[[1]][2,1]-3)
mat[i,43] <- substr(auxFile, iExpCo2Cost[[1]][2,2], iExpSocialCost[[1]][2,1]-3)
mat[i,44] <- substr(auxFile, iExpSocialCost[[1]][2,2], iExpDemand[[1]][2,1]-3)
mat[i,45] <- substr(auxFile, iRelD[[1]][2,2], iRelT[[1]][2,1]-3)
mat[i,46] <- substr(auxFile, iRelT[[1]][2,2], iRel[[1]][2,1]-3)
mat[i,47] <- substr(auxFile, iRel[[1]][2,2], iCompt[[1]][2,1]-3)
}
mat <- as.data.frame(mat)
mat
library("stringr")
setwd("/home/laura/workspace/Lore/Experiments/Exp1/")
info <- c("Instance name", "Opt dist", "Det", "Seed", "VarD", "VarT",
"W economic", "W environment", "W social",
"preventive", "corrective", "pDemand", "pTime",
"BDS-opt c", "BDS-total c", "BDS-dist", "BDS-time",
"BDS-economic c", "BDS-co2 c", "BDS-social c",
"BDS-exp opt c", "BDS-exp total c", "BDS-exp dist", "BDS-exp time",
"BDS-exp economic c", "BDS-exp co2 c", "BDS-exp social c",
"BDS-relD", "BDS-relT", "BDS-rel", "BDS-checkList",
"BSS-opt c", "BSS-total c", "BSS-dist", "BSS-time",
"BSS-economic c", "BSS-co2 c", "BSS-social c",
"BSS-exp opt c", "BSS-exp total c", "BSS-exp dist", "BSS-exp time",
"BSS-exp economic c", "BSS-exp co2 c", "BSS-exp social c",
"BSS-relD", "BSS-relT", "BSS-rel", "BSS-checkList")
listFiles <- list.files(".")
m <- length(listFiles)
mat <- matrix(0, nrow = m, ncol = length(info))
colnames(mat) <- info
for(i in 1:m){
auxFile <- listFiles[i]
mat[i,c(1:13)] <- strsplit(auxFile,"_")[[1]][c(1:3,8,11:19)]
auxFile <- readChar(auxFile, file.info(auxFile)$size)
iOptCosts <- str_locate_all(auxFile, "Optimization costs: ")
iTotalCosts <- str_locate_all(auxFile, "Total costs: ")
iDist <- str_locate_all(auxFile, "Dist: ")
iTime <- str_locate_all(auxFile, "Time: ")
iFuelCost <- str_locate_all(auxFile, "Fuel cost: ")
iEconomicCost <- str_locate_all(auxFile, "Economic cost: ")
iCo2Cost <- str_locate_all(auxFile, "Co2 cost: ")
iSocialCost <- str_locate_all(auxFile, "Social cost: ")
iCheckList <- str_locate_all(auxFile, "CheckList: ")
iStochInd <- str_locate_all(auxFile, "Stochastic Indicators")
iExpOptCosts <- str_locate_all(auxFile, "Exp. optimization costs: ")
iExpTotalCosts <- str_locate_all(auxFile, "Exp. total costs: ")
iExpDist <- str_locate_all(auxFile, "Exp. distance: ")
iExpTime <- str_locate_all(auxFile, "Exp. time: ")
iExpFuelCost <- str_locate_all(auxFile, "Exp. fuel costs: ")
iExpEconomicCost <- str_locate_all(auxFile, "Exp. economic costs: ")
iExpCo2Cost <- str_locate_all(auxFile, "Exp. co2 costs: ")
iExpSocialCost <- str_locate_all(auxFile, "Exp. social costs: ")
iExpDemand <- str_locate_all(auxFile, "Exp. demand: ")
iRelD <- str_locate_all(auxFile, "Rel. demand: ")
iRelT <- str_locate_all(auxFile, "Rel. time: ")
iRel <- str_locate_all(auxFile, "Rel.: ")
iCompt <- str_locate_all(auxFile, "Sol computing time: ")
mat[i,14] <- substr(auxFile, iOptCosts[[1]][1,2], iTotalCosts[[1]][1,1]-3)
mat[i,15] <- substr(auxFile, iTotalCosts[[1]][1,2], iDist[[1]][1,1]-3)
mat[i,16] <- substr(auxFile, iDist[[1]][1,2], iTime[[1]][1,1]-3)
mat[i,17] <- substr(auxFile, iTime[[1]][1,2], iFuelCost[[1]][1,1]-3)
mat[i,18] <- substr(auxFile, iEconomicCost[[1]][1,2], iCo2Cost[[1]][1,1]-3)
mat[i,19] <- substr(auxFile, iCo2Cost[[1]][1,2], iSocialCost[[1]][1,1]-3)
mat[i,20] <- substr(auxFile, iSocialCost[[1]][1,2], iCheckList[[1]][1,1]-3)
mat[i,21] <- substr(auxFile, iExpOptCosts[[1]][1,2], iExpTotalCosts[[1]][1,1]-3)
mat[i,22] <- substr(auxFile, iExpTotalCosts[[1]][1,2], iExpDist[[1]][1,1]-3)
mat[i,23] <- substr(auxFile, iExpDist[[1]][1,2], iExpTime[[1]][1,1]-3)
mat[i,24] <- substr(auxFile, iExpTime[[1]][1,2], iExpFuelCost[[1]][1,1]-3)
mat[i,25] <- substr(auxFile, iExpEconomicCost[[1]][1,2], iExpCo2Cost[[1]][1,1]-3)
mat[i,26] <- substr(auxFile, iExpCo2Cost[[1]][1,2], iExpSocialCost[[1]][1,1]-3)
mat[i,27] <- substr(auxFile, iExpSocialCost[[1]][1,2], iExpDemand[[1]][1,1]-3)
mat[i,28] <- substr(auxFile, iRelD[[1]][1,2], iRelT[[1]][1,1]-3)
mat[i,29] <- substr(auxFile, iRelT[[1]][1,2], iRel[[1]][1,1]-3)
mat[i,30] <- substr(auxFile, iRel[[1]][1,2], iCompt[[1]][1,1]-3)
mat[i,31] <- substr(auxFile, iCheckList[[1]][1,2], iStochInd[[1]][1,1]-3)
mat[i,32] <- substr(auxFile, iOptCosts[[1]][2,2], iTotalCosts[[1]][2,1]-3)
mat[i,33] <- substr(auxFile, iTotalCosts[[1]][2,2], iDist[[1]][2,1]-3)
mat[i,34] <- substr(auxFile, iDist[[1]][2,2], iTime[[1]][2,1]-3)
mat[i,35] <- substr(auxFile, iTime[[1]][2,2], iFuelCost[[1]][2,1]-3)
mat[i,36] <- substr(auxFile, iEconomicCost[[1]][2,2], iCo2Cost[[1]][2,1]-3)
mat[i,37] <- substr(auxFile, iCo2Cost[[1]][2,2], iSocialCost[[1]][2,1]-3)
mat[i,38] <- substr(auxFile, iSocialCost[[1]][2,2], iCheckList[[1]][2,1]-3)
mat[i,39] <- substr(auxFile, iExpOptCosts[[1]][2,2], iExpTotalCosts[[1]][2,1]-3)
mat[i,40] <- substr(auxFile, iExpTotalCosts[[1]][2,2], iExpDist[[1]][2,1]-3)
mat[i,41] <- substr(auxFile, iExpDist[[1]][2,2], iExpTime[[1]][2,1]-3)
mat[i,42] <- substr(auxFile, iExpTime[[1]][2,2], iExpFuelCost[[1]][2,1]-3)
mat[i,43] <- substr(auxFile, iExpEconomicCost[[1]][2,2], iExpCo2Cost[[1]][2,1]-3)
mat[i,44] <- substr(auxFile, iExpCo2Cost[[1]][2,2], iExpSocialCost[[1]][2,1]-3)
mat[i,45] <- substr(auxFile, iExpSocialCost[[1]][2,2], iExpDemand[[1]][2,1]-3)
mat[i,46] <- substr(auxFile, iRelD[[1]][2,2], iRelT[[1]][2,1]-3)
mat[i,47] <- substr(auxFile, iRelT[[1]][2,2], iRel[[1]][2,1]-3)
mat[i,48] <- substr(auxFile, iRel[[1]][2,2], iCompt[[1]][2,1]-3)
mat[i,49] <- substr(auxFile, iCheckList[[1]][2,2], iStochInd[[1]][2,1]-3)
}
mat <- as.data.frame(mat)
mat
mat1 <- mat[,c(1,4,7:9,15,18:20,30)]
mat1
mat1 <- mat[,c(1,4,7:9,15,18:20,31)]
mat1
mat1[1,1]
mat1[1,2]
as.numeric(mat1[1,2])
class(mat1[1,2])
as.character(mat1[1,2])
as.numeric(as.character(mat1[1,2]))
as.numeric(as.character(mat1[1,6]))
mat1 <- mat[,c(1,4,7:9,15,18:20,31)]
mat1 <- as.numeric(as.character(mat1[,c(2:9)]))
mat1
mat[,c(1,4,7:9,15,18:20,31)]
mat1 <- mat[,c(1,4,7:9,15,18:20,31)]
as.character(mat1[,c(2:9)])
mat1[,c(2:9)]
mat1[1,c(2:9)]
as.numeric(as.character(mat1[1,2]))
as.numeric(as.character(mat1[,2]))
as.numeric(as.character(mat1[,c(1,2)]))
mat1 <- mat[,c(1,4,7:9,15,18:20,31)]
cbind(mat1,mat1)
rbind(mat1,mat1)
mat1<-rbind(mat1,mat1)
for(j in seq(2,9)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
mat1
sum(mat1[,2])
sum(!mat1[,10])
sum(mat1[,10]=="false")
mat1[2,2]=210
mat1[2,6]=611
mat1
group1<-mat1
aggregate(group1[,6], by=list(seed), fun=max)
aggregate(group1[,6], by=list(seed), FUN = max)
aggregate(group1[,6], by=list(group$Seed), FUN = max)
aggregate(group1[,6], by=list(group1$Seed), FUN = max)
group1
aggregate(group1[,6], by=list(group1$`Instance name`), FUN = max)
?aggregate
group0<-mat1
which.max(group0$'BDS-total c')
aggregate(group1[,6], by=list(group1$`Instance name`), FUN = max)
?which.max
?group
?sort
