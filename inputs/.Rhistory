alphas<-NULL
alphas[1]<-a[[1]][4]
alphas[2]<-a[[1]][6]
alphas[3]<-a[[1]][8]
alphas
library(stringr)
library(reshape2)
readRoutes<-function(file){
fil<-readLines(file)
long<-length(fil)
lj<-grep(pattern="Nodes", x=fil)
routes<-as.vector(length(lj))
r<-length(lj)
routes<-NULL
for(j in 1:r){
rj<-fil[lj[j]]
ind<-str_locate_all(rj,"Nodes")
routes[j]<-str_sub(rj,ind[[1]][1,1]+9)
}
d<-NULL
for(l in 1:length(routes)){
f<-as.numeric(unlist(strsplit(routes[l],"-")))
r<-seq(0,length=length(f))
for(a in 1:length(f)){
r[a]<-as.numeric(unlist(f[a]))}
d[[l]]<-r}
return(d)}
getDist<-function(ab){
total<-dim(ab)[1]
d<-matrix(0,total,total)
for(i in 1:total){
for(j in i:total){
d[i,j]<-sqrt(sum((ab[i,1:2]-ab[j,1:2])^2))
d[j,i]<-d[i,j]}}
return(d)}
getTimes<-function(infoTime){
infoTime<-cbind(infoTime,rep(0,dim(infoTime)[1]))
for(i in 1:dim(infoTime)[1]){
infoTime[i,4]<-infoTime[i,3]}
return(infoTime)}
computeDist<-function(route,dists){
d<-0
for(i in 1:(length(route)-1)){
d<-d+dists[route[i]+1,route[i+1]+1]}
return (d)}
computeTimes<-function(route,infoTime){
t<-0
for(i in 1:(length(route)-1)){
a<-route[i]
b<-route[i+1]
if(a<b) t<-t+infoTime[infoTime[,1]==a & infoTime[,2]==b,4]
else t<-t+infoTime[infoTime[,1]==b & infoTime[,2]==a,4]}
return (t)}
computeEmissions<-function(route,dists,kpl){
emissions<-0
for(i in 1:(length(route)-1)){
emissions<-emissions+dists[route[i],route[i+1]]*kpl}
return (emissions)}
computeSocial<-function(route,dists,caSocial,infoClientes){
ddaTotal<-0
ddaAcumulada<-rep(0,(length(route)-1))
for(i in 2:(length(route)-1)){
ddaTotal<-as.numeric(ddaTotal+infoClientes[route[i]+1,3])
if(i==2){ddaAcumulada[i-1]<-infoClientes[route[i]+1,3]}
else{ddaAcumulada[i-1]<-ddaAcumulada[i-2]+infoClientes[route[i]+1,3]}}
coste<-0
for(i in 1:(length(route)-1)){
if(i==1){coste<-dists[route[i]+1,route[i+1]+1]*(ddaTotal)}
else{coste<-coste+dists[route[i]+1,route[i+1]+1]*(ddaTotal-ddaAcumulada[i-1])}}
return (coste)}
computeCostDist<-function(totalDist,caDistance,kpl){
return(totalDist*caDistance*kpl)}
computeCO2Cost<-function(totalDist,caDistance,kpl){
return(totalDist*caDistance*kpl)}
computeCostTime<-function(totalTime,DW,FC,MinTime,Maxtime,Lt){
penalty=0
return((totalTime*DW)+FC+penalty)}
#computeCostTime<-function(totalTime,DW,FC,MinTime,Maxtime,Lt){
# deltaP=totalTime-Lt*MinTime
#  deltaM=(1/Lt)*MaxTime-totalTime
#  penalty=0
#  if(deltaP>0){penalty=2*deltaP*DW}
#  if(deltaM>0){penalty=2*deltaM*DW}
#  return((totalTime*DW)+FC+penalty)}
computeCostSocial<-function(totalSocial,caSocial){
return(totalSocial*caSocial)}
computeoptCost<-function(Econ,Env,Social,importanceWeight){
return(sum(importanceWeight[[1]]*Econ,importanceWeight[[2]]*Env,importanceWeight[[3]]*Social))}
computeEconomicCost<-function(costDist,costTime){
return(sum(costDist,costTime))}
computeTotalCost<-function(costDist,costTime,costSocial){
return(sum(costDist,costTime,costSocial))}
checkAllCustomerServed<-function(routes,infoClientes){
n<-dim(infoClientes)[1]
n2<-sum(0:n %in% unique(unlist(routes)))
return (n==n2)}
checkMaxTimeBattery<-function(routes,maxTime,infoTime){
l<-length(routes)
l2<-NULL
for(i in 1:l){
aux<-computeTimes(routes[[i]],infoTime)
l2[i]<-(aux<=maxTime)}
l3<-sum(l2)
return (l==l3)}
checkMaxTimeWorkingHours<-function(routes,maxTime,infoTime){
l<-length(routes)
l2<-NULL
for(i in 1:l){
aux<-computeTimes(routes[[i]],infoTime)
l2[i]<-(aux<=maxTime)}
l3<-sum(l2)
return (l==l3)}
checkMaxDemand<-function(routes,capacity,infoClientes){
l<-length(routes)
l2<-NULL
for(j in 1:l){
aux<-0
for(i in 1:(length(routes[[j]])-1)){
aux<-aux+infoClientes[routes[[j]][i]+1,3]}
l2[j]<-(aux<=capacity)}
l3<-sum(l2)
return (l==l3)}
getMaxTime<-function(routes,infoTime){
maxRoute=0
for(i in 1: length(routes)){
a<-computeTimes(routes[[i]],infoTime)
if(a>=maxRoute)maxRoute=a}
return (maxRoute)}
getMinTime<-function(routes,infoTime){
minRoute=9999999
for(i in 1: length(routes)){
a<-computeTimes(routes[[i]],infoTime)
if(a<=minRoute)minRoute=a}
return (minRoute)}
source("C://Users//lorena.reyes//Dropbox//UPNA//PW//Projects//MDVRP_Trabajo UOC UPNA//JoH//CORRECTIONS_BACKUP//R_JoH//Test_newCode//FunctionsLSRR")
#setwd("C://Users//lorena.reyes//Dropbox//JAVA//SECVRP//outputs")
#setwd("C://Users//lorena.reyes//Dropbox//JAVA//ESVRP-DT//outputsMS")
#setwd("C://Users//Lorena Silvana//Documents//Proyectos Eclipse//SECVRP1//outputs")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ECVRP//outputsH")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP-DT//outputsMS")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP_IG//outputs")
#setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//outputs//itime_TRUE_idistance_FALSE_isocial_FALSE")
#C:\Users\lorena.reyes\Documents\Java_Workspace\Testing
#setwd("E://ECVRP_UoP_UOC_UPNA_IG_without balanced constrainst//outputs")
setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//outputs")
#afile<-"Validation.txt"
afile<-"A-n32-k5_84342_true_0.5_true_0.5_true_0.5_outputs.txt"
a<-strsplit(afile,"_")
alphas<-NULL
alphas[1]<-a[[1]][4]
alphas[2]<-a[[1]][6]
alphas[3]<-a[[1]][8]
#afile<-"CMT6_24300_false_true_false_outputs.txt"
#afile<-"E1_24300_0.25_true_true_true_0.5_0_outputs.txt"
#afile<-"E1_24300_outputs.txt"
#afile<-"E3_24300_0.25_true_true_true_0.5_0_outputs.txt"
routes<-readRoutes(afile)
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP_IG//inputs")
setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//inputs")
bfile<-"A-n32-k5_nodes.txt"
infoClientes<-read.table(bfile)
cfile<-"A-n32-k5_medium.txt"
tj<-readLines(cfile)
infoTime<-matrix(0,ncol=3,nrow = (length(tj)-1))
for(n in 2:(length(tj)-1)){
f<-as.numeric(unlist(strsplit(tj[n]," ")))
infoTime[n-1,]<-f}
#infoTime<-as.numeric(unlist(strsplit(infoTime," ")))
#infoTime<-matrix(infoTime,ncol=3,byrow=TRUE)
vfile<-"A-n32-k5_vehicles.txt"
vCap<-read.table(vfile)
pfile<-"Parameters-1.txt"
infoParameter<-read.table(pfile) # caSocial, caTime, caDistance, caCO2, kpl)
dists<-getDist(infoClientes)
infoTime<-getTimes(infoTime)
MaxTime<-getMaxTime(routes,infoTime)
MinTime<-getMinTime(routes,infoTime)
resultats<-matrix(0,ncol=10,nrow=length(routes))
for(i in 1:length(routes)){
resultats[i,1]<-computeDist(routes[[i]],dists)
resultats[i,2]<-computeTimes(routes[[i]],infoTime)
resultats[i,3]<-computeSocial(routes[[i]],dists,infoParameter[1,1],infoClientes)
resultats[i,4]<-computeCostDist(resultats[i,1],infoParameter[4,1],infoParameter[5,1])
resultats[i,5]<-computeCostTime(resultats[i,2],infoParameter[2,1],infoParameter[3,1],MinTime,MaxTime,infoParameter[9,1])
resultats[i,6]<-computeCostSocial(resultats[i,3],infoParameter[1,1])
resultats[i,7]<-computeEconomicCost(resultats[i,4],resultats[i,5])
resultats[i,8]<-computeCO2Cost(resultats[i,1],infoParameter[4,1],infoParameter[5,1])
resultats[i,9]<-computeTotalCost(resultats[i,6],resultats[i,7],resultats[i,8])
resultats[i,10]<-computeoptCost(resultats[i,7],resultats[i,8],resultats[i,6],alphas)}
colnames(resultats)<-c("totalDis","totalTimes","totalSocial",
"costDist","costTime","costSocial","EconomicCost","EnvironCost","TotalCost","OptCost")
apply(resultats,2,sum)
checkAllCustomerServed(routes,infoClientes)
checkMaxTimeBattery(routes,infoParameter[6,1],infoTime)
checkMaxTimeWorkingHours(routes,infoParameter[7,1],infoTime)
checkMaxDemand(routes,unique(vCap),infoClientes)
alphas
source("C://Users//lorena.reyes//Dropbox//UPNA//PW//Projects//MDVRP_Trabajo UOC UPNA//JoH//CORRECTIONS_BACKUP//R_JoH//Test_newCode//FunctionsLSRR")
#setwd("C://Users//lorena.reyes//Dropbox//JAVA//SECVRP//outputs")
#setwd("C://Users//lorena.reyes//Dropbox//JAVA//ESVRP-DT//outputsMS")
#setwd("C://Users//Lorena Silvana//Documents//Proyectos Eclipse//SECVRP1//outputs")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ECVRP//outputsH")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP-DT//outputsMS")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP_IG//outputs")
#setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//outputs//itime_TRUE_idistance_FALSE_isocial_FALSE")
#C:\Users\lorena.reyes\Documents\Java_Workspace\Testing
#setwd("E://ECVRP_UoP_UOC_UPNA_IG_without balanced constrainst//outputs")
setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//outputs")
#afile<-"Validation.txt"
afile<-"A-n32-k5_84342_true_0.5_true_0.5_true_0.5_outputs.txt"
a<-strsplit(afile,"_")
alphas<-NULL
alphas[1]<-as.numeric(a[[1]][4])
alphas[2]<-as.numeric(a[[1]][6])
alphas[3]<-as.numeric(a[[1]][8])
#afile<-"CMT6_24300_false_true_false_outputs.txt"
#afile<-"E1_24300_0.25_true_true_true_0.5_0_outputs.txt"
#afile<-"E1_24300_outputs.txt"
#afile<-"E3_24300_0.25_true_true_true_0.5_0_outputs.txt"
routes<-readRoutes(afile)
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP_IG//inputs")
setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//inputs")
bfile<-"A-n32-k5_nodes.txt"
infoClientes<-read.table(bfile)
cfile<-"A-n32-k5_medium.txt"
tj<-readLines(cfile)
infoTime<-matrix(0,ncol=3,nrow = (length(tj)-1))
for(n in 2:(length(tj)-1)){
f<-as.numeric(unlist(strsplit(tj[n]," ")))
infoTime[n-1,]<-f}
#infoTime<-as.numeric(unlist(strsplit(infoTime," ")))
#infoTime<-matrix(infoTime,ncol=3,byrow=TRUE)
vfile<-"A-n32-k5_vehicles.txt"
vCap<-read.table(vfile)
pfile<-"Parameters-1.txt"
infoParameter<-read.table(pfile) # caSocial, caTime, caDistance, caCO2, kpl)
dists<-getDist(infoClientes)
infoTime<-getTimes(infoTime)
MaxTime<-getMaxTime(routes,infoTime)
MinTime<-getMinTime(routes,infoTime)
resultats<-matrix(0,ncol=10,nrow=length(routes))
for(i in 1:length(routes)){
resultats[i,1]<-computeDist(routes[[i]],dists)
resultats[i,2]<-computeTimes(routes[[i]],infoTime)
resultats[i,3]<-computeSocial(routes[[i]],dists,infoParameter[1,1],infoClientes)
resultats[i,4]<-computeCostDist(resultats[i,1],infoParameter[4,1],infoParameter[5,1])
resultats[i,5]<-computeCostTime(resultats[i,2],infoParameter[2,1],infoParameter[3,1],MinTime,MaxTime,infoParameter[9,1])
resultats[i,6]<-computeCostSocial(resultats[i,3],infoParameter[1,1])
resultats[i,7]<-computeEconomicCost(resultats[i,4],resultats[i,5])
resultats[i,8]<-computeCO2Cost(resultats[i,1],infoParameter[4,1],infoParameter[5,1])
resultats[i,9]<-computeTotalCost(resultats[i,6],resultats[i,7],resultats[i,8])
resultats[i,10]<-computeoptCost(resultats[i,7],resultats[i,8],resultats[i,6],alphas)}
colnames(resultats)<-c("totalDis","totalTimes","totalSocial",
"costDist","costTime","costSocial","EconomicCost","EnvironCost","TotalCost","OptCost")
apply(resultats,2,sum)
checkAllCustomerServed(routes,infoClientes)
checkMaxTimeBattery(routes,infoParameter[6,1],infoTime)
checkMaxTimeWorkingHours(routes,infoParameter[7,1],infoTime)
checkMaxDemand(routes,unique(vCap),infoClientes)
source("C://Users//lorena.reyes//Dropbox//UPNA//PW//Projects//MDVRP_Trabajo UOC UPNA//JoH//CORRECTIONS_BACKUP//R_JoH//Test_newCode//FunctionsLSRR")
#setwd("C://Users//lorena.reyes//Dropbox//JAVA//SECVRP//outputs")
#setwd("C://Users//lorena.reyes//Dropbox//JAVA//ESVRP-DT//outputsMS")
#setwd("C://Users//Lorena Silvana//Documents//Proyectos Eclipse//SECVRP1//outputs")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ECVRP//outputsH")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP-DT//outputsMS")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP_IG//outputs")
#setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//outputs//itime_TRUE_idistance_FALSE_isocial_FALSE")
#C:\Users\lorena.reyes\Documents\Java_Workspace\Testing
#setwd("E://ECVRP_UoP_UOC_UPNA_IG_without balanced constrainst//outputs")
setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//outputs")
#afile<-"Validation.txt"
afile<-"A-n32-k5_84342_true_0.5_true_0.5_true_0.5_outputs.txt"
a<-strsplit(afile,"_")
alphas<-NULL
alphas[1]<-as.numeric(a[[1]][4])
alphas[2]<-as.numeric(a[[1]][6])
alphas[3]<-as.numeric(a[[1]][8])
#afile<-"CMT6_24300_false_true_false_outputs.txt"
#afile<-"E1_24300_0.25_true_true_true_0.5_0_outputs.txt"
#afile<-"E1_24300_outputs.txt"
#afile<-"E3_24300_0.25_true_true_true_0.5_0_outputs.txt"
routes<-readRoutes(afile)
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP_IG//inputs")
setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//inputs")
bfile<-"A-n32-k5_nodes.txt"
infoClientes<-read.table(bfile)
cfile<-"A-n32-k5_medium.txt"
tj<-readLines(cfile)
infoTime<-matrix(0,ncol=3,nrow = (length(tj)-1))
for(n in 2:(length(tj)-1)){
f<-as.numeric(unlist(strsplit(tj[n]," ")))
infoTime[n-1,]<-f}
#infoTime<-as.numeric(unlist(strsplit(infoTime," ")))
#infoTime<-matrix(infoTime,ncol=3,byrow=TRUE)
vfile<-"A-n32-k5_vehicles.txt"
vCap<-read.table(vfile)
pfile<-"Parameters-1.txt"
infoParameter<-read.table(pfile) # caSocial, caTime, caDistance, caCO2, kpl)
dists<-getDist(infoClientes)
infoTime<-getTimes(infoTime)
MaxTime<-getMaxTime(routes,infoTime)
MinTime<-getMinTime(routes,infoTime)
resultats<-matrix(0,ncol=10,nrow=length(routes))
for(i in 1:length(routes)){
resultats[i,1]<-computeDist(routes[[i]],dists)
resultats[i,2]<-computeTimes(routes[[i]],infoTime)
resultats[i,3]<-computeSocial(routes[[i]],dists,infoParameter[1,1],infoClientes)
resultats[i,4]<-computeCostDist(resultats[i,1],infoParameter[4,1],infoParameter[5,1])
resultats[i,5]<-computeCostTime(resultats[i,2],infoParameter[2,1],infoParameter[3,1],MinTime,MaxTime,infoParameter[9,1])
resultats[i,6]<-computeCostSocial(resultats[i,3],infoParameter[1,1])
resultats[i,7]<-computeEconomicCost(resultats[i,4],resultats[i,5])
resultats[i,8]<-computeCO2Cost(resultats[i,1],infoParameter[4,1],infoParameter[5,1])
resultats[i,9]<-computeTotalCost(resultats[i,6],resultats[i,7],resultats[i,8])
resultats[i,10]<-computeoptCost(resultats[i,7],resultats[i,8],resultats[i,6],alphas)}
colnames(resultats)<-c("totalDis","totalTimes","totalSocial",
"costDist","costTime","costSocial","EconomicCost","EnvironCost","TotalCost","OptCost")
apply(resultats,2,sum)
checkAllCustomerServed(routes,infoClientes)
checkMaxTimeBattery(routes,infoParameter[6,1],infoTime)
checkMaxTimeWorkingHours(routes,infoParameter[7,1],infoTime)
checkMaxDemand(routes,unique(vCap),infoClientes)
source("C://Users//lorena.reyes//Dropbox//UPNA//PW//Projects//MDVRP_Trabajo UOC UPNA//JoH//CORRECTIONS_BACKUP//R_JoH//Test_newCode//FunctionsLSRR")
#setwd("C://Users//lorena.reyes//Dropbox//JAVA//SECVRP//outputs")
#setwd("C://Users//lorena.reyes//Dropbox//JAVA//ESVRP-DT//outputsMS")
#setwd("C://Users//Lorena Silvana//Documents//Proyectos Eclipse//SECVRP1//outputs")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ECVRP//outputsH")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP-DT//outputsMS")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP_IG//outputs")
#setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//outputs//itime_TRUE_idistance_FALSE_isocial_FALSE")
#C:\Users\lorena.reyes\Documents\Java_Workspace\Testing
#setwd("E://ECVRP_UoP_UOC_UPNA_IG_without balanced constrainst//outputs")
setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//outputs")
#afile<-"Validation.txt"
afile<-"A-n32-k5_84342_true_0.5_true_0.5_true_0.5_outputs.txt"
a<-strsplit(afile,"_")
alphas<-NULL
alphas[1]<-as.numeric(a[[1]][4])
alphas[2]<-as.numeric(a[[1]][6])
alphas[3]<-as.numeric(a[[1]][8])
#afile<-"CMT6_24300_false_true_false_outputs.txt"
#afile<-"E1_24300_0.25_true_true_true_0.5_0_outputs.txt"
#afile<-"E1_24300_outputs.txt"
#afile<-"E3_24300_0.25_true_true_true_0.5_0_outputs.txt"
routes<-readRoutes(afile)
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP_IG//inputs")
setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//inputs")
bfile<-"A-n32-k5_nodes.txt"
infoClientes<-read.table(bfile)
cfile<-"A-n32-k5_medium.txt"
tj<-readLines(cfile)
infoTime<-matrix(0,ncol=3,nrow = (length(tj)-1))
for(n in 2:(length(tj)-1)){
f<-as.numeric(unlist(strsplit(tj[n]," ")))
infoTime[n-1,]<-f}
#infoTime<-as.numeric(unlist(strsplit(infoTime," ")))
#infoTime<-matrix(infoTime,ncol=3,byrow=TRUE)
vfile<-"A-n32-k5_vehicles.txt"
vCap<-read.table(vfile)
pfile<-"Parameters-1.txt"
infoParameter<-read.table(pfile) # caSocial, caTime, caDistance, caCO2, kpl)
dists<-getDist(infoClientes)
infoTime<-getTimes(infoTime)
MaxTime<-getMaxTime(routes,infoTime)
MinTime<-getMinTime(routes,infoTime)
resultats<-matrix(0,ncol=10,nrow=length(routes))
for(i in 1:length(routes)){
resultats[i,1]<-computeDist(routes[[i]],dists)
resultats[i,2]<-computeTimes(routes[[i]],infoTime)
resultats[i,3]<-computeSocial(routes[[i]],dists,infoParameter[1,1],infoClientes)
resultats[i,4]<-computeCostDist(resultats[i,1],infoParameter[4,1],infoParameter[5,1])
resultats[i,5]<-computeCostTime(resultats[i,2],infoParameter[2,1],infoParameter[3,1],MinTime,MaxTime,infoParameter[9,1])
resultats[i,6]<-computeCostSocial(resultats[i,3],infoParameter[1,1])
resultats[i,7]<-computeEconomicCost(resultats[i,4],resultats[i,5])
resultats[i,8]<-computeCO2Cost(resultats[i,1],infoParameter[4,1],infoParameter[5,1])
resultats[i,9]<-computeTotalCost(resultats[i,6],resultats[i,7],resultats[i,8])
resultats[i,10]<-computeoptCost(resultats[i,7],resultats[i,8],resultats[i,6],alphas)}
colnames(resultats)<-c("totalDis","totalTimes","totalSocial",
"costDist","costTime","costSocial","EconomicCost","EnvironCost","TotalCost","OptCost")
apply(resultats,2,sum)
checkAllCustomerServed(routes,infoClientes)
checkMaxTimeBattery(routes,infoParameter[6,1],infoTime)
checkMaxTimeWorkingHours(routes,infoParameter[7,1],infoTime)
checkMaxDemand(routes,unique(vCap),infoClientes)
resultats
apply(resultats,2,sum)
source("C://Users//lorena.reyes//Dropbox//UPNA//PW//Projects//MDVRP_Trabajo UOC UPNA//JoH//CORRECTIONS_BACKUP//R_JoH//Test_newCode//FunctionsLSRR")
#setwd("C://Users//lorena.reyes//Dropbox//JAVA//SECVRP//outputs")
#setwd("C://Users//lorena.reyes//Dropbox//JAVA//ESVRP-DT//outputsMS")
#setwd("C://Users//Lorena Silvana//Documents//Proyectos Eclipse//SECVRP1//outputs")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ECVRP//outputsH")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP-DT//outputsMS")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP_IG//outputs")
#setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//outputs//itime_TRUE_idistance_FALSE_isocial_FALSE")
#C:\Users\lorena.reyes\Documents\Java_Workspace\Testing
#setwd("E://ECVRP_UoP_UOC_UPNA_IG_without balanced constrainst//outputs")
setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//outputs")
#afile<-"Validation.txt"
afile<-"A-n32-k5_84342_true_0.5_true_0.5_true_0.5_outputs.txt"
a<-strsplit(afile,"_")
alphas<-NULL
alphas[1]<-as.numeric(a[[1]][4])
alphas[2]<-as.numeric(a[[1]][6])
alphas[3]<-as.numeric(a[[1]][8])
#afile<-"CMT6_24300_false_true_false_outputs.txt"
#afile<-"E1_24300_0.25_true_true_true_0.5_0_outputs.txt"
#afile<-"E1_24300_outputs.txt"
#afile<-"E3_24300_0.25_true_true_true_0.5_0_outputs.txt"
routes<-readRoutes(afile)
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP_IG//inputs")
setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//inputs")
bfile<-"A-n32-k5_nodes.txt"
infoClientes<-read.table(bfile)
cfile<-"A-n32-k5_medium.txt"
tj<-readLines(cfile)
infoTime<-matrix(0,ncol=3,nrow = (length(tj)-1))
for(n in 2:(length(tj)-1)){
f<-as.numeric(unlist(strsplit(tj[n]," ")))
infoTime[n-1,]<-f}
#infoTime<-as.numeric(unlist(strsplit(infoTime," ")))
#infoTime<-matrix(infoTime,ncol=3,byrow=TRUE)
vfile<-"A-n32-k5_vehicles.txt"
vCap<-read.table(vfile)
pfile<-"Parameters-1.txt"
infoParameter<-read.table(pfile) # caSocial, caTime, caDistance, caCO2, kpl)
dists<-getDist(infoClientes)
infoTime<-getTimes(infoTime)
MaxTime<-getMaxTime(routes,infoTime)
MinTime<-getMinTime(routes,infoTime)
resultats<-matrix(0,ncol=10,nrow=length(routes))
for(i in 1:length(routes)){
resultats[i,1]<-computeDist(routes[[i]],dists)
resultats[i,2]<-computeTimes(routes[[i]],infoTime)
resultats[i,3]<-computeSocial(routes[[i]],dists,infoParameter[1,1],infoClientes)
resultats[i,4]<-computeCostDist(resultats[i,1],infoParameter[4,1],infoParameter[5,1])
resultats[i,5]<-computeCostTime(resultats[i,2],infoParameter[2,1],infoParameter[3,1],MinTime,MaxTime,infoParameter[9,1])
resultats[i,6]<-computeCostSocial(resultats[i,3],infoParameter[1,1])
resultats[i,7]<-computeEconomicCost(resultats[i,4],resultats[i,5])
resultats[i,8]<-computeCO2Cost(resultats[i,1],infoParameter[4,1],infoParameter[5,1])
resultats[i,9]<-computeTotalCost(resultats[i,6],resultats[i,7],resultats[i,8])
resultats[i,10]<-computeoptCost(resultats[i,7],resultats[i,8],resultats[i,6],alphas)}
colnames(resultats)<-c("totalDis","totalTimes","totalSocial",
"costDist","costTime","costSocial","EconomicCost","EnvironCost","TotalCost","OptCost")
apply(resultats,2,sum)
checkAllCustomerServed(routes,infoClientes)
checkMaxTimeBattery(routes,infoParameter[6,1],infoTime)
checkMaxTimeWorkingHours(routes,infoParameter[7,1],infoTime)
checkMaxDemand(routes,unique(vCap),infoClientes)
resultats
source("C://Users//lorena.reyes//Dropbox//UPNA//PW//Projects//MDVRP_Trabajo UOC UPNA//JoH//CORRECTIONS_BACKUP//R_JoH//Test_newCode//FunctionsLSRR")
#setwd("C://Users//lorena.reyes//Dropbox//JAVA//SECVRP//outputs")
#setwd("C://Users//lorena.reyes//Dropbox//JAVA//ESVRP-DT//outputsMS")
#setwd("C://Users//Lorena Silvana//Documents//Proyectos Eclipse//SECVRP1//outputs")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ECVRP//outputsH")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP-DT//outputsMS")
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP_IG//outputs")
#setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//outputs//itime_TRUE_idistance_FALSE_isocial_FALSE")
#C:\Users\lorena.reyes\Documents\Java_Workspace\Testing
#setwd("E://ECVRP_UoP_UOC_UPNA_IG_without balanced constrainst//outputs")
setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//outputs")
#afile<-"Validation.txt"
afile<-"A-n32-k5_84342_true_0.5_true_0.5_true_0.5_outputs.txt"
a<-strsplit(afile,"_")
alphas<-NULL
alphas[1]<-as.numeric(a[[1]][4])
alphas[2]<-as.numeric(a[[1]][6])
alphas[3]<-as.numeric(a[[1]][8])
#afile<-"CMT6_24300_false_true_false_outputs.txt"
#afile<-"E1_24300_0.25_true_true_true_0.5_0_outputs.txt"
#afile<-"E1_24300_outputs.txt"
#afile<-"E3_24300_0.25_true_true_true_0.5_0_outputs.txt"
routes<-readRoutes(afile)
#setwd("C://Users//Lorena Silvana//Documents//JAVA//ESVRP_IG//inputs")
setwd("C://Users//lorena.reyes//Documents//Java_Workspace//ECVRP_UoP_UOC_UPNA_IG//inputs")
bfile<-"A-n32-k5_nodes.txt"
infoClientes<-read.table(bfile)
cfile<-"A-n32-k5_medium.txt"
tj<-readLines(cfile)
infoTime<-matrix(0,ncol=3,nrow = (length(tj)-1))
for(n in 2:(length(tj)-1)){
f<-as.numeric(unlist(strsplit(tj[n]," ")))
infoTime[n-1,]<-f}
#infoTime<-as.numeric(unlist(strsplit(infoTime," ")))
#infoTime<-matrix(infoTime,ncol=3,byrow=TRUE)
vfile<-"A-n32-k5_vehicles.txt"
vCap<-read.table(vfile)
pfile<-"Parameters-1.txt"
infoParameter<-read.table(pfile) # caSocial, caTime, caDistance, caCO2, kpl)
dists<-getDist(infoClientes)
infoTime<-getTimes(infoTime)
MaxTime<-getMaxTime(routes,infoTime)
MinTime<-getMinTime(routes,infoTime)
resultats<-matrix(0,ncol=10,nrow=length(routes))
for(i in 1:length(routes)){
resultats[i,1]<-computeDist(routes[[i]],dists)
resultats[i,2]<-computeTimes(routes[[i]],infoTime)
resultats[i,3]<-computeSocial(routes[[i]],dists,infoParameter[1,1],infoClientes)
resultats[i,4]<-computeCostDist(resultats[i,1],infoParameter[4,1],infoParameter[5,1])
resultats[i,5]<-computeCostTime(resultats[i,2],infoParameter[2,1],infoParameter[3,1],MinTime,MaxTime,infoParameter[9,1])
resultats[i,6]<-computeCostSocial(resultats[i,3],infoParameter[1,1])
resultats[i,7]<-computeEconomicCost(resultats[i,4],resultats[i,5])
resultats[i,8]<-computeCO2Cost(resultats[i,1],infoParameter[4,1],infoParameter[5,1])
resultats[i,9]<-computeTotalCost(resultats[i,6],resultats[i,7],resultats[i,8])
resultats[i,10]<-computeoptCost(resultats[i,7],resultats[i,8],resultats[i,6],alphas)}
colnames(resultats)<-c("totalDis","totalTimes","totalSocial",
"costDist","costTime","costSocial","EconomicCost","EnvironCost","TotalCost","OptCost")
apply(resultats,2,sum)
checkAllCustomerServed(routes,infoClientes)
checkMaxTimeBattery(routes,infoParameter[6,1],infoTime)
checkMaxTimeWorkingHours(routes,infoParameter[7,1],infoTime)
checkMaxDemand(routes,unique(vCap),infoClientes)
resultats
apply(resultats,2,sum)
