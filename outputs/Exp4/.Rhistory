}
library("stringr")
setwd("/home/laura/workspace/Lore/Experiments/Exp5/")
# setwd("C://Users//usuario//Desktop//eclipse//workspace//Lore0818//outputs//Exp5//")
source("/home/laura/workspace/Lore/R/0.3reading.R")
# source("C://Users//usuario//Desktop//eclipse//workspace//Lore0818//R//0.3reading.R")
info <- c("Instance", "MaxTime", "BSS-exp total c", "BSS-rel")
mat1 <- mat[,c(1,14,44,53,57)]
for(j in c(2:4)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
setwd("/home/laura/workspace/Lore/Experiments/Exp5/")
setwd("/home/laura/workspace/Lore/outputs/Exp5/")
source("/home/laura/workspace/Lore/R/0.3reading.R")
info <- c("Instance", "MaxTime", "BSS-exp total c", "BSS-rel")
mat1 <- mat[,c(1,14,44,53,57)]
for(j in c(2:4)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,5]=="false")
head(mat1)
mat1 <- mat[,c(1,14,45,53,57)]
for(j in c(2:4)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,5]=="false")
mat1 <- mat1[,-c(5)]
auxplot <- mat1
auxplot1 <- subset(auxplot, auxplot[,1]==levels(auxplot$Instance)[1])
auxplot1 <- auxplot1[order(auxplot1$pTime),]
auxplot2 <- subset(auxplot, auxplot[,1]==levels(auxplot$Instance)[2])
auxplot2 <- auxplot2[order(auxplot2$pTime),]
auxplot1 <- cbind(auxplot1, seed=rep(1:10,7))
auxplot2 <- cbind(auxplot2, seed=rep(1:10,7))
auxplot11 <- auxplot1
for(i in 1:7){
for(j in 1:10){
a <- which.min(auxplot1[c(((i-1)*10+1):((i-1)*10+j)),3])
b <- (i-1)*10+a
auxplot11[((i-1)*10+j),c(3:4)] <- auxplot1[b,(3:4)]
}
}
#par(mfrow=c(1,2))
scatterplot3d(auxplot11$pTime, auxplot11$seed, auxplot11$`BSS-exp opt c`, pch=16, highlight.3d=TRUE, type="h",
xlab="Seconds", ylab="Number of seeds", zlab="Exp total cost")
#scatterplot3d(auxplot11$pTime, auxplot11$seed, auxplot11$`BSS-rel`, pch=16, highlight.3d=TRUE, type="h",
#             xlab="Seconds", ylab="Number of seeds", zlab="Reliability")
library("scatterplot3d")
install.packages("scatterplot3d")
library("scatterplot3d")
scatterplot3d(auxplot11$pTime, auxplot11$seed, auxplot11$`BSS-exp opt c`, pch=16, highlight.3d=TRUE, type="h",
xlab="Seconds", ylab="Number of seeds", zlab="Exp total cost")
head(auxplot11)
scatterplot3d(auxplot11$pTime, auxplot11$seed, auxplot11$`BSS-exp total c`, pch=16, highlight.3d=TRUE, type="h",
xlab="Seconds", ylab="Number of seeds", zlab="Exp total cost")
scatterplot3d(auxplot11$pTime, auxplot11$seed, auxplot11$`BSS-exp total c`, pch=16, highlight.3d=TRUE, type="h",
xlab="Seconds", ylab="Number of seeds", zlab="Exp total cost")
library("stringr")
library("MASS")
# setwd("/home/laura/workspace/Lore/Experiments/Exp4/")
setwd("C://Users//usuario//Desktop//eclipse//workspace//Lore0818//outputs//Exp4//")
setwd("/home/laura/workspace/Lore/Experiments/Exp4/")
source("/home/laura/workspace/Lore/R/0.1reading.R")
info <- c("Instance", "FF - Cost", "FF - Rel", "FT - Cost", "FT - Rel", "TT - Cost", "TT - Rel")
mat1 <- mat[,c(1,10,11,43,52,57)]
for(j in c(4,5)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,6]=="false")
mat1 <- mat1[,-c(6)]
mat1 <- cbind(mat1, id = 1:dim(mat1)[1])
source("/home/laura/workspace/Lore/R/0.1reading.R")
info <- c("Instance", "FF - Cost", "FF - Rel", "FT - Cost", "FT - Rel", "TT - Cost", "TT - Rel")
mat1 <- mat[,c(1,10,11,43,52,57)]
for(j in c(4,5)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,6]=="false")
mat1 <- mat1[,-c(6)]
mat1 <- cbind(mat1, id = 1:dim(mat1)[1])
dim(mat)
names(mat)
mat1 <- mat[,c(1,10,11,43,52,53)]
for(j in c(4,5)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,6]=="false")
mat1 <- mat1[,-c(6)]
mat1 <- cbind(mat1, id = 1:dim(mat1)[1])
names(mat)[c(]1,10,11,43,52,53]
names(mat)[1,10,11,43,52,53]
names(mat)[c(1,10,11,43,52,53)]
mat1 <- mat[,c(1,10,11,43,51,52)]
for(j in c(4,5)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,6]=="false")
mat1 <- mat1[,-c(6)]
mat1 <- cbind(mat1, id = 1:dim(mat1)[1])
ids <- NULL
for(i in 1:length(levels(mat1$Instance))){
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="false")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp opt c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp opt c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="true" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp opt c`)])}
par(mfrow=c(1,2))
auxplot<-matrix(mat1[ids,4],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",xlab="",cex.axis=0.8)
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.8)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
legend("topright",legend=levels(mat1$Instance),cex=0.8,col=1:6,lty=1:6)
ids <- NULL
for(i in 1:length(levels(mat1$Instance))){
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="false")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp opt c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp opt c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="true" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp opt c`)])}
auxplot<-matrix(mat1[ids,4],ncol=3,byrow=TRUE)
maxV<-max(auxplot)
minV<-min(auxplot)
auxplot
mat1
head(mat1)
mat1 <- mat[,c(1,10,11,43,51,52)]
for(j in c(4,5)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,6]=="false")
mat1 <- mat1[,-c(6)]
mat1 <- cbind(mat1, id = 1:dim(mat1)[1])
ids <- NULL
for(i in 1:length(levels(mat1$Instance))){
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="false")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp opt c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp opt c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="true" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp opt c`)])}
auxplot<-matrix(mat1[ids,4],ncol=3,byrow=TRUE)
auxplot
mat1[ids,4]
ids
levels(mat1$Instance))
levels(mat1$Instance)
length(levels(mat1$Instance))
1:length(levels(mat1$Instance))
mat1
ids <- NULL
for(i in 1:length(levels(mat1$Instance))){
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="false")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="true" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])}
par(mfrow=c(1,2))
auxplot<-matrix(mat1[ids,4],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",xlab="",cex.axis=0.8)
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.8)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
legend("topright",legend=levels(mat1$Instance),cex=0.8,col=1:6,lty=1:6)
par(mfrow=c(1,2))
auxplot<-matrix(mat1[ids,4],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",xlab="",cex.axis=0.8)
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.8)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
legend("topright",legend=levels(mat1$Instance),cex=0.8,col=1:6,lty=1:6)
auxplot<-matrix(mat1[ids,5],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",cex.axis=0.8,xlab="")
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.8)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
# compute gaps and make boxplot
setwd("/home/laura/workspace/Lore/outputs/Exp4/")
mat1 <- mat[,c(1,10,11,43,51,52)]
for(j in c(4,5)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,6]=="false")
mat1 <- mat1[,-c(6)]
mat1 <- cbind(mat1, id = 1:dim(mat1)[1])
ids <- NULL
for(i in 1:length(levels(mat1$Instance))){
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="false")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="true" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])}
par(mfrow=c(1,2))
auxplot<-matrix(mat1[ids,4],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",xlab="",cex.axis=0.8)
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.8)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
legend("topright",legend=levels(mat1$Instance),cex=0.8,col=1:6,lty=1:6)
auxplot<-matrix(mat1[ids,5],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",cex.axis=0.8,xlab="")
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.8)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
# compute gaps and make boxplot
setwd("/home/laura/workspace/Lore/outputs/Exp4/")
source("/home/laura/workspace/Lore/R/0.1reading.R")
mat1 <- mat[,c(1,10,11,43,52,57)]
for(j in c(4,5)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,6]=="false")
mat1 <- mat1[,-c(6)]
mat1 <- cbind(mat1, id = 1:dim(mat1)[1])
ids <- NULL
for(i in 1:length(levels(mat1$Instance))){
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="false")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="true" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])}
par(mfrow=c(1,2))
auxplot<-matrix(mat1[ids,4],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",xlab="",cex.axis=0.8)
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.8)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
legend("topright",legend=levels(mat1$Instance),cex=0.8,col=1:6,lty=1:6)
auxplot<-matrix(mat1[ids,5],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",cex.axis=0.8,xlab="")
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.8)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
# compute gaps and make boxplot
setwd("/home/laura/workspace/Lore/outputs/Exp4/")
# setwd("C://Users//usuario//Desktop//eclipse//workspace//Lore0818//outputs//Exp4//")
source("/home/laura/workspace/Lore/R/0.1reading.R")
# source("C://Users//usuario//Desktop//eclipse//workspace//Lore0818//R//0.2reading.R")
mat1 <- mat[,c(1,10,11,43,52,57)]
source("/home/laura/workspace/Lore/R/0.2reading.R")
mat1 <- mat[,c(1,10,11,43,52,57)]
for(j in c(4,5)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,6]=="false")
mat1 <- mat1[,-c(6)]
mat1 <- cbind(mat1, id = 1:dim(mat1)[1])
ids <- NULL
for(i in 1:length(levels(mat1$Instance))){
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="false")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="true" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])}
par(mfrow=c(1,2))
auxplot<-matrix(mat1[ids,4],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",xlab="",cex.axis=0.8)
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.8)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
legend("topright",legend=levels(mat1$Instance),cex=0.8,col=1:6,lty=1:6)
auxplot<-matrix(mat1[ids,5],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",cex.axis=0.8,xlab="")
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.8)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
# compute gaps and make boxplot
#mat1 <- mat[,c(1,10,11,43,51,52)]
mat1 <- mat[,c(1,10,11,43,52,57)]
for(j in c(4,5)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,6]=="false")
mat1 <- mat1[,-c(6)]
mat1 <- cbind(mat1, id = 1:dim(mat1)[1])
head(mat1)
mat1 <- mat[,c(1,10,11,43,53,57)]
head(mat1)
mat1 <- mat[,c(1,10,11,43,53,57)]
mat1 <- mat[,c(1,10,11,44,51,53)]
head(mat1)
mat1 <- mat[,c(1,10,11,44,52,53)]
head(mat1)
for(j in c(4,5)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,6]=="false")
mat1 <- mat1[,-c(6)]
mat1 <- cbind(mat1, id = 1:dim(mat1)[1])
ids <- NULL
for(i in 1:length(levels(mat1$Instance))){
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="false")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="false" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])
aux <- subset(mat1, mat[,1]==levels(mat1$Instance)[i] & mat1[,2]=="true" & mat1[,3]=="true")
ids <- c(ids, aux$id[which.min(aux$`BSS-exp total c`)])}
par(mfrow=c(1,2))
auxplot<-matrix(mat1[ids,4],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",xlab="",cex.axis=0.8)
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.8)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
legend("topright",legend=levels(mat1$Instance),cex=0.8,col=1:6,lty=1:6)
auxplot<-matrix(mat1[ids,5],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",cex.axis=0.8,xlab="")
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.8)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
# compute gaps and make boxplot
par(mfrow=c(1,2))
auxplot<-matrix(mat1[ids,4],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",xlab="",cex.axis=0.85)
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.85)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
legend("topright",legend=levels(mat1$Instance),cex=0.85,col=1:6,lty=1:6)
auxplot<-matrix(mat1[ids,5],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",cex.axis=0.85,xlab="")
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.85)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
par(mfrow=c(1,2))
auxplot<-matrix(mat1[ids,4],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",xlab="",cex.axis=0.9)
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.9)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
legend("topright",legend=levels(mat1$Instance),cex=0.85,col=1:6,lty=1:6)
auxplot<-matrix(mat1[ids,5],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",cex.axis=0.9,xlab="")
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.9)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
par(mfrow=c(1,2))
auxplot<-matrix(mat1[ids,4],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",xlab="",cex.axis=0.95)
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.95)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
legend("topright",legend=levels(mat1$Instance),cex=0.85,col=1:6,lty=1:6)
auxplot<-matrix(mat1[ids,5],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="",cex.axis=0.95,xlab="")
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.95)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
# compute gaps and make boxplot
par(mfrow=c(1,2))
auxplot<-matrix(mat1[ids,4],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="Exp total cost",xlab="",cex.axis=0.95)
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.95)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
legend("topright",legend=levels(mat1$Instance),cex=0.85,col=1:6,lty=1:6)
auxplot<-matrix(mat1[ids,5],ncol=3,byrow=TRUE)
# parcoord(auxplot)
maxV<-max(auxplot)
minV<-min(auxplot)
plot(1:3,1:3,type="n",ylim=c(minV,maxV),xaxt="n",ylab="Reliability",cex.axis=0.95,xlab="")
axis(1,at=1:3,c("No policies","\nCorrective\npolicies","All policies"),tick=FALSE,cex.axis=0.95)
points(rep(1,6),auxplot[,1],col=1:6)
for(i in 1:6){
lines(x=c(1,2),y=c(auxplot[i,c(1:2)]),col=i,lty=i)}
points(rep(2,6),auxplot[,2],col=1:6)
for(i in 1:6){
lines(x=c(2,3),y=c(auxplot[i,c(2:3)]),col=i,lty=i)}
points(rep(3,6),auxplot[,3],col=1:6)
