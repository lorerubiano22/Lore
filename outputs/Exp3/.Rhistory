iRel <- str_locate_all(auxFile, "Rel.: ")
library("stringr")
setwd("C://Users//usuario//Desktop//eclipse//workspace//Lore0818//outputs//Exp3//")
source("C://Users//usuario//Desktop//eclipse//workspace//Lore0818//R//0.1reading.R")
info <- c("Instance", "Seed", "pDemand", "pTime",
"BSS-exp opt c",
"BSS-relD", "BSS-relT", "BSS-rel", "BSS-checkList",
"BSS-SSC1", "BSS-SSC2", "BSS-SSB")
mat1 <- mat[,c(1,4,12,13,42,49,50,51,52)]
for(j in seq(5,8)){
mat1[,j] <- as.numeric(as.character(mat1[,j]))}
sum(mat1[,9]=="false")
mat1 <- mat1[,-c(9)]
instanceLevels <- levels(mat1$Instance)
pDLevels <- levels(mat1$pDemand)
pTLevels <- levels(mat1$pTime)
mat1 <-cbind(mat1, id = 1:dim(mat1)[1])
results <- NULL
indexs <- NULL
mat1
results <- mat1[indexs,]
results
indexs <- NULL
for(i in instanceLevels){
for(j in pDLevels){
for(k in pTLevels){
aux <- subset(mat1, mat1[,1] == instanceLevels[i] & mat1[,3] == pDLevels[j] & mat1[,4] == pTLevels[k])
indexs <- c(indexs,aux$id[which.min(aux$`BSS-exp opt c`)])
}
}
}
results <- mat1[indexs,]
results
indexs
instanceLevels
pDLevels
pTLevels
i<-1
j<-1
k<-1
aux <- subset(mat1, mat1[,1] == instanceLevels[i] & mat1[,3] == pDLevels[j] & mat1[,4] == pTLevels[k])
aux
aux$id[which.min(aux$`BSS-exp opt c`)]
indexs <- c(indexs,aux$id[which.min(aux$`BSS-exp opt c`)]
)
indexs
for(i in instanceLevels){
for(j in pDLevels){
for(k in pTLevels){
aux <- subset(mat1, mat1[,1] == instanceLevels[i] & mat1[,3] == pDLevels[j] & mat1[,4] == pTLevels[k])
indexs <- c(indexs,aux$id[which.min(aux$`BSS-exp opt c`)])
}
}
}
indexs
for(i in 1:instanceLevels){
for(j in 1:pDLevels){
for(k in 1:pTLevels){
aux <- subset(mat1, mat1[,1] == instanceLevels[i] & mat1[,3] == pDLevels[j] & mat1[,4] == pTLevels[k])
indexs <- c(indexs,aux$id[which.min(aux$`BSS-exp opt c`)])
}
}
}
1:instanceLevels
for(i in 1:length(instanceLevels)){
for(j in 1:length(pDLevels)){
for(k in 1:length(pTLevels)){
aux <- subset(mat1, mat1[,1] == instanceLevels[i] & mat1[,3] == pDLevels[j] & mat1[,4] == pTLevels[k])
indexs <- c(indexs,aux$id[which.min(aux$`BSS-exp opt c`)])
}
}
}
indexs <- NULL
for(i in 1:length(instanceLevels)){
for(j in 1:length(pDLevels)){
for(k in 1:length(pTLevels)){
aux <- subset(mat1, mat1[,1] == instanceLevels[i] & mat1[,3] == pDLevels[j] & mat1[,4] == pTLevels[k])
indexs <- c(indexs,aux$id[which.min(aux$`BSS-exp opt c`)])
}
}
}
results <- mat1[indexs,]
results
plot(0, xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)))
plot(0, xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)))
aux <- subset(mat1, mat1[,1] == instanceLevels[1])
plot(0, xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)))
plot(xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)))
plot(0,xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)), type="n")
plot(0,xlim=c(0.45,0.9), type="n")
plot(0, type="n")
plot(0)
plot(1:2,1:2)
plot(0,xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)), type="n")
yaxis(0,c(0.45,0.6,0.75,0.9))
axisy(0,c(0.45,0.6,0.75,0.9))
axis(0,c(0.45,0.6,0.75,0.9))
axis(1,c(0.45,0.6,0.75,0.9))
plot(0,xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)), yaxt="n")
plot(0,xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)), xaxt="n")
axis(1,c(0.45,0.6,0.75,0.9))
i<-1
aux <- subset(mat1, mat1[,1] == instanceLevels[i])
plot(0,xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)), xaxt="n",
xlab="pDemand")
axis(1,c(0.45,0.6,0.75,0.9))
for(j in 1:length(pTLevels)){
aux2 <- subset(aux, aux[,4] == pTLevels[j])
lines(aux2$pDemand, aux2$pDemand)
}
j<-1
i<-1
aux <- subset(mat1, mat1[,1] == instanceLevels[i])
plot(0,xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)), xaxt="n",
xlab="pDemand")
axis(1,c(0.45,0.6,0.75,0.9))
aux2 <- subset(aux, aux[,4] == pTLevels[j])
lines(aux2$pDemand, aux2$pDemand)
lines(aux2$pDemand, aux2$`BSS-exp opt c`)
c(aux2$pDemand, aux2$`BSS-exp opt c`)
as.numeric(aux2$pDemand)
aux2$pDemand
class(aux2$pDemand)
as.numeric(as.character(aux2$pDemand))
lines(as.numeric(as.character(aux2$pDemand)), aux2$`BSS-exp opt c`)
lines(as.numeric(as.character(aux2$pDemand)), aux2$`BSS-exp opt c`)
aux2$pDemand
aux2 <- subset(aux, aux[,4] == pTLevels[j])
aux2
par(mfrow = c(2,3))
for(i in 1:length(instanceLevels)){
aux <- subset(results, results[,1] == instanceLevels[i])
plot(0,xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)), xaxt="n",
xlab="pDemand")
axis(1,c(0.45,0.6,0.75,0.9))
for(j in 1:length(pTLevels)){
aux2 <- subset(aux, aux[,4] == pTLevels[j])
lines(as.numeric(as.character(aux2$pDemand)), aux2$`BSS-exp opt c`)
}
}
i<-1
aux <- subset(results, results[,1] == instanceLevels[i])
plot(0,xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)), xaxt="n",
xlab="pDemand")
length(pTLevels)
j<-1
aux2 <- subset(aux, aux[,4] == pTLevels[j])
aux2
lines(as.numeric(as.character(aux2$pDemand)), aux2$`BSS-exp opt c`)
axis(1,c(0.45,0.6,0.75,0.9))
j:2
j<-2
aux2 <- subset(aux, aux[,4] == pTLevels[j])
lines(as.numeric(as.character(aux2$pDemand)), aux2$`BSS-exp opt c`)
aux2
j=3
aux2 <- subset(aux, aux[,4] == pTLevels[j])
lines(as.numeric(as.character(aux2$pDemand)), aux2$`BSS-exp opt c`)
j=4
aux2 <- subset(aux, aux[,4] == pTLevels[j])
lines(as.numeric(as.character(aux2$pDemand)), aux2$`BSS-exp opt c`)
lines(as.numeric(as.character(aux2$pDemand)), aux2$`BSS-exp opt c`, lty=j, col=j, pch=j)
for(j in 1:length(pTLevels)){
aux2 <- subset(aux, aux[,4] == pTLevels[j])
lines(as.numeric(as.character(aux2$pDemand)), aux2$`BSS-exp opt c`, lty=j, col=j, pch=j)
}
plot(0,xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)), xaxt="n",
xlab="pDemand")
axis(1,c(0.45,0.6,0.75,0.9))
for(j in 1:length(pTLevels)){
aux2 <- subset(aux, aux[,4] == pTLevels[j])
lines(as.numeric(as.character(aux2$pDemand)), aux2$`BSS-exp opt c`, lty=j, col=j, pch=j)
}
legend("topleft",lty=1:length(pTLevels), col=1:length(pTLevels), c(0.45,0.6,0.75,0.9))
legend("topleft",legend = c(0.45,0.6,0.75,0.9), lty=1:length(pTLevels), col=1:length(pTLevels), c(0.45,0.6,0.75,0.9))
par(mfrow = c(2,3))
for(i in 1:length(instanceLevels)){
aux <- subset(results, results[,1] == instanceLevels[i])
plot(0,xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)), xaxt="n",
xlab="pDemand")
if(i==1){
legend("topleft",legend = c(0.45,0.6,0.75,0.9), lty=1:length(pTLevels), col=1:length(pTLevels), c(0.45,0.6,0.75,0.9))}
axis(1,c(0.45,0.6,0.75,0.9))
for(j in 1:length(pTLevels)){
aux2 <- subset(aux, aux[,4] == pTLevels[j])
lines(as.numeric(as.character(aux2$pDemand)), aux2$`BSS-exp opt c`, lty=j, col=j, pch=j)
}
}
par(mfrow = c(2,3))
for(i in 1:length(instanceLevels)){
aux <- subset(results, results[,1] == instanceLevels[i])
plot(0,xlim=c(0.45,0.9), ylim = c(min(aux$`BSS-exp opt c`), max(aux$`BSS-exp opt c`)), xaxt="n",
xlab="pDemand")
if(i==1){
legend("topleft",legend = c(0.45,0.6,0.75,0.9), lty=1:length(pTLevels), col=1:length(pTLevels), c(0.45,0.6,0.75,0.9))}
axis(1,c(0.45,0.6,0.75,0.9))
for(j in 1:length(pTLevels)){
aux2 <- subset(aux, aux[,4] == pTLevels[j])
lines(as.numeric(as.character(aux2$pDemand)), aux2$`BSS-exp opt c`, lty=j, col=j, pch=j)
}
}
